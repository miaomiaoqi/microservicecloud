spring:
  application:
    name: springcloud-sell-gateway
  cloud:
    config:
      profile: dev # 指定环境
      uri: http://localhost:9936 # config server地址
      label: master # git 分支
#      discovery:
#        service-id: SPRINGCLOUD-SELL-CONFIG # 服务id
#        enabled: true # 是否启用
zuul:
  ignored-patterns: # 忽略的路由规则, 即禁止访问
    - /**/product/listForOrder
  sensitive-headers: # 忽略全部服务敏感头
  routes:
    springcloud-sell-product: # 定义一个路由规则, 规则名字可以任意起
      path: /myProduct/** # 路由匹配的路径
      serviceId: SPRINGCLOUD-SELL-PRODUCT # 转发到的服务
      stripPrefix: true # 是否去除前缀
      sensitiveHeaders:
    springcloud-sell-user: # 定义一个路由规则, 规则名字可以任意起
      path: /api/user/** # 路由匹配的路径
      serviceId: SPRINGCLOUD-SELL-USER # 转发到的服务
      stripPrefix: true # 是否去除前缀
      sensitiveHeaders:
    springcloud-sell-order:
      path: /api/order/**
      serviceid: SPRINGCLOUD-SELL-ORDER
      stripPrefix: true # 是否去除前缀
      sensitiveHeaders:
    # SPRINGCLOUD-SELL-PRODUCT: /myProduct/** 如果只有 serviceId 和 path 可以简写成这样, 默认去掉前缀
  host: # 如果路由方式是 url 的方式，那么该超时配置生效
    connect-timeout-millis: 100 # HTTP连接超时
    socket-timeout-millis: 100  # socket超时

ribbon: # 如果路由方式是 serviceId 的方式，那么该全局超时配置生效
  eureka:
    enabled: true
  ReadTimeout: 1000
  ConnectTimeout: 1000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

SPRINGCLOUD-SELL-ORDER: # 指定服务超时设置
  ribbon: # 如果路由方式是 serviceId 的方式，那么该超时配置生效
    eureka:
      enabled: true
    ReadTimeout: 3000
    ConnectTimeout: 3000
    MaxAutoRetries: 0
    MaxAutoRetriesNextServer: 1
    OkToRetryOnAllOperations: false

SPRINGCLOUD-SELL-PRODUCT:
  ribbon: # 如果路由方式是 serviceId 的方式，那么该超时配置生效
    eureka:
      enabled: true
    ReadTimeout: 3000
    ConnectTimeout: 3000
    MaxAutoRetries: 0
    MaxAutoRetriesNextServer: 1
    OkToRetryOnAllOperations: false

# 因为懒加载, 所以设置默认超时加大一些, 防止第一次请求失败
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 500
    SPRINGCLOUD-SELL-PRODUCT: # 指定特定服务或方法的超时时间
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000

management:
  endpoints:
    web:
      exposure:
        include: "*" # 暴露对外访问的接口, 以便使用 http://localhost:9946/actuator/routes 查看路由